CREATE TYPE denormalized_refset_concept AS (
    concept_id bigint,
    preferred_term text,
    definition_status text,
    active boolean,
    effective_time date,
    module bigint
);

CREATE TABLE IF NOT EXISTS denormalized_description_for_current_snapshot(id bigint, module_id bigint, module_name text, effective_time date, language_code text, active boolean, type_id bigint, type_name text, term text, case_significance_id bigint, case_significance_name text, concept_id bigint, language_reference_set_memberships json, PRIMARY KEY (effective_time, active, module_id, id));

CREATE INDEX fsn_denormalized_description_for_current_snapshot_type_id ON denormalized_description_for_current_snapshot (type_id) WHERE type_id = 900000000000003001;

CREATE INDEX ix_denormalized_description_for_current_snapshot_concept_id ON denormalized_description_for_current_snapshot (concept_id);

CREATE INDEX ix_denormalized_description_for_current_snapshot_id ON denormalized_description_for_current_snapshot (id);

CREATE INDEX ix_denormalized_description_for_current_snapshot_type_id ON denormalized_description_for_current_snapshot (type_id);


CREATE TABLE IF NOT EXISTS transitive_closure_for_current_snapshot(subtype_id bigint, supertype_id bigint, effective_time date, active boolean, PRIMARY KEY (subtype_id, supertype_id, effective_time, active));

CREATE INDEX ix_tc_main ON  single_snapshot_transitive_closure (subtype_id,supertype_id);

CREATE INDEX ix_tc_inv ON  single_snapshot_transitive_closure (supertype_id);


CREATE TABLE IF NOT EXISTS denormalized_relationship_for_current_snapshot(id bigint, effective_time date, active boolean, module_id bigint, module_name text, relationship_group integer, source_id bigint, source_name text, destination_id bigint, destination_name text, type_id bigint, type_name text, characteristic_type_id bigint, characteristic_type_name text, modifier_id bigint, modifier_name text, PRIMARY KEY (effective_time, active, module_id, id)
);

CREATE INDEX ix_denormalized_relationship_id ON denormalized_relationship_for_current_snapshot (id);

CREATE INDEX ix_denormalized_relationship_type_id_partial ON denormalized_relationship_for_current_snapshot (type_id) WHERE type_id = 116680003;


CREATE TABLE IF NOT EXISTS snomed_denormalized_concept_view_for_current_snapshot(id bigint, effective_time date, active boolean, module_id bigint, module_name text, definition_status_id bigint, definition_status_name text, is_primitive boolean, fully_specified_name text, preferred_term text, definition json, descriptions json, parents json, children json, ancestors json, descendants json, incoming_relationships json, outgoing_relationships json, reference_set_memberships json, PRIMARY KEY (effective_time, active, module_id, id)
);

CREATE INDEX ix_denormalized_concept_id ON snomed_denormalized_concept_view_for_current_snapshot (id);


CREATE TABLE IF NOT EXISTS denormalized_language_reference_set(referenced_component_id bigint, refset denormalized_refset_concept, uuid uuid, active boolean, effective_time date, module_id bigint, PRIMARY KEY (effective_time, active, module_id, uuid));

CREATE INDEX ix_denormalized_language_reference_set_referenced_component_id ON denormalized_language_reference_set (referenced_component_id);


CREATE TABLE IF NOT EXISTS denormalized_reference_set(referenced_component_id bigint, refset denormalized_refset_concept, uuid uuid, active boolean, effective_time date, module_id bigint, PRIMARY KEY (effective_time, active, module_id, uuid));

CREATE INDEX ix_denormalized_reference_set_referenced_component_id ON denormalized_reference_set (referenced_component_id);


COPY denormalized_description_for_current_snapshot(id, module_id, module_name, effective_time, language_code, active, type_id, type_name, term, case_significance_id, case_significance_name, concept_id, language_reference_set_memberships)
FROM '/opt/snomedct_terminology_server/final_build_data/denormalized_description_for_current_snapshot.tsv'
WITH (FORMAT text);

COPY transitive_closure_for_current_snapshot(subtype_id, supertype_id, effective_time, active)
FROM '/opt/snomedct_terminology_server/final_build_data/snomed_transitive_closure_for_current_snapshot.tsv'
WITH (FORMAT text);

COPY denormalized_relationship_for_current_snapshot(id,  effective_time, active, module_id, module_name, relationship_group, source_id, source_name, destination_id, destination_name, type_id, type_name, characteristic_type_id, characteristic_type_name, modifier_id, modifier_name)
FROM '/opt/snomedct_terminology_server/final_build_data/snomed_denormalized_relationship_for_current_snapshot.tsv'
WITH (FORMAT text);

COPY snomed_denormalized_concept_view_for_current_snapshot(id, effective_time, active, module_id, module_name, definition_status_id, definition_status_name, is_primitive, fully_specified_name, preferred_term, definition, descriptions, parents, children, ancestors, descendants, incoming_relationships, outgoing_relationships, reference_set_memberships)
FROM '/opt/snomedct_terminology_server/final_build_data/snomed_denormalized_concept_view_for_current_snapshot.tsv'
WITH (FORMAT text);

COPY denormalized_language_reference_set(referenced_component_id, refset, uuid, active, effective_time, module_id)
FROM '/opt/snomedct_terminology_server/final_build_data/snomed_denormalized_langrefset_view_for_current_snapshot.tsv'
WITH (FORMAT text);

COPY denormalized_reference_set(referenced_component_id, refset, uuid, active, effective_time, module_id)
FROM '/opt/snomedct_terminology_server/final_build_data/snomed_denormalized_refset_view_for_current_snapshot.tsv'
WITH (FORMAT text);
